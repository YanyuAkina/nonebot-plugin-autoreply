# 自用本地路径：plugins\\py-plugin\\data\\autoreply\\
# Intel Fortran 运行时错误相关配置（WIP）
- matches:
    - match: '运行时错误'
      type: full

  replies:
    - type: normal
      message: |-
        运行时错误，是源代码正确地编译链接后，在执行阶段遇到的错误。几乎没有任何程序可以完全的避免运行时错误。它可能发生在某些意想不到的情况下。比如：磁盘满了，内存不够了，文件被只读保护了，杀毒软件拦截了等等
        具体如何看懂运行时错误，请参考：
        『教你看懂 Intel Fortran 的运行时错误』
        http://fcode.cn/guide-64-1.html
# ------------------
- matches:
    - match: '运行时错误信息介绍'
      type: full

  replies:
    - type: normal
      message: |-
        [CQ:image,file=https://autoreply.lgc2333.top/replies/fortran/运行时错误介绍.png]
# ------------------
- matches:
    - match: '^(severe\(24\))|(severe24)|(s24)|(24)$'
      type: regex

  replies:
    - type: normal
      message: |-
        severe (24): End-of-fle during read

        原因：
        这是读取文件时遇到了文件的结束。例如，代码要求数据有 3 行数据，而实际输入文件只有 2 行。在某些时候，甚至输入文件根本不存在或是空白文件。此外，数据文件缺失某些行某此列也是较大的可能。当然，也可能是循环读取文件时没控制住。比如想读 100 行，结果写错了，读了 1000 行。有时候，可能是文件路径错误，导致实际读取了另一个空白的文件。或者文件扩展名被隐藏了，比如读取 a.txt，但实际的文件名却是 a.txt.txt。

        解决：
        补足数据文件，或者修改代码使得读取的数据与实际数据文件一致。
# ------------------
- matches:
    - match: '^(severe\(29\))|(severe29)|(s29)|(29)$'
      type: regex

  replies:
    - type: normal
      message: |-
        severe (29): File not found

        原因：
        这个就简单了，文件找不到。最大的可能是文件名写错了，路径 (文件夹) 放置不正确。

        解决：
        增加应有的文件，或放置到合适的路径下。
# ------------------
- matches:
    - match: '^(severe\(36\))|(severe36)|(s36)|(36)$'
      type: regex

  replies:
    - type: normal
      message: |-
        severe (36): Attempt to access non-existent record

        原因：
        一般针对直接读取文件，意思是读写了一个不存在的记录。例如文件只有2个记录，却视图读取第3个。也可能是记录长度的字节数设置不正确，使得应该在第2记录的字节超出了文件的字节。

        解决：
        修改代码或修改文件，使得记录长度与个数相匹配。
# ------------------
- matches:
    - match: '^(severe\(41\))|(severe41)|(s41)|(41)$'
      type: regex

  replies:
    - type: normal
      message: |-
        severe (41): Insufficient virtual memory

        原因：
        程序试图访问一个受保护或不存在的内存地址。多数为可分配数组，指针等动态内存引发的错误。

        解决：
        确保数组已经经过分配后才访问，确保指针指向可用的内容。
# ------------------
- matches:
    - match: '^(info\(58\))|(info58)|(s58)|(58)$'
      type: regex

  replies:
    - type: normal
      message: |-
        info (58): Format syntax error at or near xx

        原因：
        在xx位置或附近的格式符x错误。因为使用了错误的输入输出格式符。

        解决：
        修改源代码中对应的格式符，或输入正确的可识别的格式符。
# ------------------
- matches:
    - match: '^(severe\(59\))|(severe59)|(s59)|(59)$'
      type: regex

  replies:
    - type: normal
      message: |-
        severe (59): List-directed I/O syntax error

        原因：
        输入数据不正确。例如从文件或字符串中读取整型或浮点数数据，而遇到非数字的符号，比如“abc”。

        解决：
        这个问题多数需要修改输入文件。
# ------------------
- matches:
    - match: '^(severe\(64\))|(severe64)|(s64)|(64)$'
      type: regex

  replies:
    - type: normal
      message: |-
        severe (64): Input conversion error

        原因：
        输入时，遇到了异常的转换错误。可能是输入中包含非法的字符(比如输入一个整数，遇到了!1.7a3!)，或者输入数据超过了转换数据的范围(比如输入一个32位整数，但!输入值超过了 2147483648!)。
        
        解决：
        修改文件，去除非法字符。或使用更长的变量类型容纳大数据。
# ------------------
- matches:
    - match: '^error\(65\)|error65|e65|65$'
      type: regex

  replies:
    - type: normal
      message: |-
        error (65): Floating invalid

        原因：
        这是计算式最容易发生的错误，它表示浮点数错误，数学函数错误（如超出数学函数的定义域，负数开放，分母为零等等）。

        解决：
        对数据进行合理控制判断是否在定义域内，如每个算例均出现，应进行 Debug 调试。
# ------------------
- matches:
    - match: '^(severe\(71\))|(severe71)|(s71)|(71)$'
      type: regex

  replies:
    - type: normal
      message: |-
        severe (71): Integer divide by zero

        原因：
        这是计算式最容易发生的错误，它表示浮点数错误，数学函数错误（如超出数学函数的定义域，负数开方，分母为零等等）。

        解决：
        对数据进行合理控制判断是否在定义域内，如每个算例均出现，应进行 Debug 调试。
# ------------------
- matches:
    - match: '^(severe\(147\))|(severe147)|(s147)|(147)$'
      type: regex

  replies:
    - type: normal
      message: |-
        severe (147): Stack overflow

        原因：
        堆栈溢出。可能性较多：堆栈不够；程序内局部变量太大或太多；递归调用终止失控。

        解决：
        首先尝试该大堆栈，在不同编译器上具体操作不同。VS 中可设置工程属性，如图：[CQ:image,file=https://autoreply.lgc2333.top/replies/fortran/severe147.jpeg]
        命令行下增加链接开关：!/STACK:1000000000,1000000000!
        如果还是不足，可将大的局部数组改为可分配数组。如有递归调用函数，检查其终止条件是否设置合理。
# ------------------
- matches:
    - match: '^(severe\(157\))|(severe157)|(s157)|(157)$'
      type: regex

  replies:
    - type: normal
      message: |-
        severe (157): Program Exception - access violation

        原因：
        这个问题可能性很多，属于比较麻烦的运行时错误。表示程序尝试读写一个非法的内存地址。常见于可分配数组尚未分配就传入子程序使用，子程序中修改了虚参但对应的实参为常数，等等。
        
        解决：
        Debug 调试，检查错误所在位置。
# ------------------
- matches:
    - match: '^(severe\(161\))|(severe161)|(s161)|(161)$'
      type: regex

  replies:
    - type: normal
      message: |-
        severe (161): Program Exception - array bounds exceeded

        原因：
        这是数组越界，即，数组引用的元素超出了定义它的范围。比如定义 a(50:100)，如引用 a(49)或 a(101) 则会越界。很多时候，这是循环对数组操作时，没控制好，比如Doi= 50,100 然后引用了 a(i+1)，当 i=100 时，i+1=101,就会越界。Intel Fortran 的数组越界会给出很详细的错误提示，包括具体越界的数组名，定义范围和引用角标。

        解决：
        检查越界数组，根据情况修改代码。
# ------------------
- matches:
    - match: '^(severe\(256\))|(severe256)|(s256)|(256)$'
      type: regex

  replies:
    - type: normal
      message: |-
        severe (256): Unformatted I/O to unit open for formatted transfers

        原因：
        使用无格式打开的文件，但使用了有格式的输入输出。或反之。

        解决：
        使用匹配的格式打开和输入输出。
# ------------------
- matches:
    - match: '^(severe\(257\))|(severe257)|(s257)|(257)$'
      type: regex

  replies:
    - type: normal
      message: |-
        severe (257): Formatted I/O to unit open for unformatted transfers

        原因：
        使用无格式打开的文件，但使用了有格式的输入输出。或反之。

        解决：
        使用匹配的格式打开和输入输出。
# ------------------
- matches:
    - match: '^(severe\(257\))|(severe257)|(s257)|(257)$'
      type: regex

  replies:
    - type: normal
      message: |-
        severe (259): Sequential-access I/O to unit open for direct access

        原因：
        使用直接读写方式打开的文件，但使用了顺序读取的输入输出。
        
        解决：
        使用匹配的读写方式打开和输入输出。
# 一些 Fortran 相关问题配置（WIP）
- matches:
    - match: '版本'
      type: full

  replies:
    - type: normal
      message: |-
        [CQ:image,file=https://autoreply.lgc2333.top/replies/fortran/英特尔oneAPI版本表.png]
        若想了解更多信息，请访问：
        https://www.intel.com/content/www/us/en/developer/articles/reference-implementation/intel-compilers-compatibility-with-microsoft-visual-studio-and-xcode.html
        
